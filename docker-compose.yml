services:
  db:
    container_name: db
    image: postgres:15
    volumes:
      - diagraph-db-data:/var/lib/postgresql/data
    env_file:
      - "./config.env"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adviser"]
      interval: 5s
      timeout: 5s
      retries: 10
  router:
    build: ./router
    volumes:
      - ./router:/node
    tty: true
    ports:
    - "8083:8083"
    healthcheck:
      test: ping -c 1 router > /dev/null 2>&1; echo $?
      interval: 5s
      timeout: 5s
      retries: 10
  diagraph:
    build: 
      context: .
      dockerfile: ./adviser/Dockerfile
    command: python3 /django_code/run_dialogsystem.py tree --debug --noconsole
    volumes:
      - ./adviser:/django_code
    depends_on:
      db:
        condition: service_healthy
      router:
        condition: service_healthy
    tty: true
    env_file:
      - "./config.env"
  ui:
    build:
      context: .
      dockerfile: ./adviser/dialog_designer_ui/Dockerfile
    command: npm start
    volumes:
      - ./adviser/dialog_designer_ui:/dialog_designer_ui
    tty: true
    ports:
    - "8003:8003"
  django:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./adviser:/django_code/adviser
      - /apps
      - /django_static
    tty: true
    depends_on:
      db:
        condition: service_healthy
      router:
        condition: service_healthy
    ports:
     - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 15
    env_file:
      - "./config.env"
volumes:
  diagraph-db-data:
